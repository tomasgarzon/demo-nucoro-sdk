# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ClientEmbedRanking(object):

    """Implementation of the 'ClientEmbedRanking' model.

    TODO: type model description here.

    Attributes:
        uuid (uuid|string): TODO: type description here.
        full_name (string): TODO: type description here.
        balance (float): TODO: type description here.
        earnings (float): TODO: type description here.
        mwrr (float): TODO: type description here.
        twrr (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uuid": 'uuid',
        "full_name": 'full_name',
        "balance": 'balance',
        "earnings": 'earnings',
        "mwrr": 'mwrr',
        "twrr": 'twrr'
    }

    def __init__(self,
                 uuid=None,
                 full_name=None,
                 balance=None,
                 earnings=None,
                 mwrr=None,
                 twrr=None):
        """Constructor for the ClientEmbedRanking class"""

        # Initialize members of the class
        self.uuid = uuid
        self.full_name = full_name
        self.balance = balance
        self.earnings = earnings
        self.mwrr = mwrr
        self.twrr = twrr

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        uuid = dictionary.get('uuid')
        full_name = dictionary.get('full_name')
        balance = dictionary.get('balance')
        earnings = dictionary.get('earnings')
        mwrr = dictionary.get('mwrr')
        twrr = dictionary.get('twrr')

        # Return an object of this model
        return cls(uuid,
                   full_name,
                   balance,
                   earnings,
                   mwrr,
                   twrr)
