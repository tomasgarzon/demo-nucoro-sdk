# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class RelatedAssetSerializerWithAssetCategories(object):

    """Implementation of the 'RelatedAssetSerializerWithAssetCategories' model.

    Allow get asset by multiple params or UUID

    Attributes:
        uuid (uuid|string): TODO: type description here.
        market (string): TODO: type description here.
        isin (string): TODO: type description here.
        currency (string): TODO: type description here.
        ticker (string): TODO: type description here.
        name (string): TODO: type description here.
        extra_data (dict): TODO: type description here.
        categories (list of string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uuid": 'uuid',
        "isin": 'isin',
        "ticker": 'ticker',
        "name": 'name',
        "categories": 'categories',
        "market": 'market',
        "currency": 'currency',
        "extra_data": 'extra_data'
    }

    def __init__(self,
                 uuid=None,
                 isin=None,
                 ticker=None,
                 name=None,
                 categories=None,
                 market=None,
                 currency=None,
                 extra_data=None):
        """Constructor for the RelatedAssetSerializerWithAssetCategories class"""

        # Initialize members of the class
        self.uuid = uuid
        self.market = market
        self.isin = isin
        self.currency = currency
        self.ticker = ticker
        self.name = name
        self.extra_data = extra_data
        self.categories = categories

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        uuid = dictionary.get('uuid')
        isin = dictionary.get('isin')
        ticker = dictionary.get('ticker')
        name = dictionary.get('name')
        categories = dictionary.get('categories')
        market = dictionary.get('market')
        currency = dictionary.get('currency')
        extra_data = dictionary.get('extra_data')

        # Return an object of this model
        return cls(uuid,
                   isin,
                   ticker,
                   name,
                   categories,
                   market,
                   currency,
                   extra_data)
