# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from nucoroapiv2.models.related_asset_serializer_with_asset_categories import RelatedAssetSerializerWithAssetCategories


class AssetModelPortfolio(object):

    """Implementation of the 'AssetModelPortfolio' model.

    A ModelSerializer that takes additional arguments for
    "fields", "omit" and "expand" in order to
    control which fields are displayed, and whether to replace simple
    values with complex, nested serializations

    Attributes:
        asset (RelatedAssetSerializerWithAssetCategories): Allow get asset by
            multiple params or UUID
        weight (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "asset": 'asset',
        "weight": 'weight'
    }

    def __init__(self,
                 asset=None,
                 weight=None):
        """Constructor for the AssetModelPortfolio class"""

        # Initialize members of the class
        self.asset = asset
        self.weight = weight

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        asset = RelatedAssetSerializerWithAssetCategories.from_dictionary(dictionary.get('asset')) if dictionary.get('asset') else None
        weight = dictionary.get('weight')

        # Return an object of this model
        return cls(asset,
                   weight)
