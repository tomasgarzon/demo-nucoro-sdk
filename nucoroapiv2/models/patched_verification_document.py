# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class PatchedVerificationDocument(object):

    """Implementation of the 'PatchedVerificationDocument' model.

    A ModelSerializer that takes additional arguments for
    "fields", "omit" and "expand" in order to
    control which fields are displayed, and whether to replace simple
    values with complex, nested serializations

    Attributes:
        uuid (uuid|string): TODO: type description here.
        document_type (DocumentTypeEnum): TODO: type description here.
        document_front (string): TODO: type description here.
        document_back (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uuid": 'uuid',
        "document_type": 'document_type',
        "document_front": 'document_front',
        "document_back": 'document_back'
    }

    def __init__(self,
                 uuid=None,
                 document_type=None,
                 document_front=None,
                 document_back=None):
        """Constructor for the PatchedVerificationDocument class"""

        # Initialize members of the class
        self.uuid = uuid
        self.document_type = document_type
        self.document_front = document_front
        self.document_back = document_back

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        uuid = dictionary.get('uuid')
        document_type = dictionary.get('document_type')
        document_front = dictionary.get('document_front')
        document_back = dictionary.get('document_back')

        # Return an object of this model
        return cls(uuid,
                   document_type,
                   document_front,
                   document_back)
