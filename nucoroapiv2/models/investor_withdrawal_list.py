# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class InvestorWithdrawalList(object):

    """Implementation of the 'InvestorWithdrawalList' model.

    TODO: type model description here.

    Attributes:
        uuid (uuid|string): TODO: type description here.
        amount (float): TODO: type description here.
        status (Status14bEnum): TODO: type description here.
        withdrawal_type (string): TODO: type description here.
        extra_data (dict): Additional withdrawal attributes for the specific
            portal

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uuid": 'uuid',
        "amount": 'amount',
        "status": 'status',
        "withdrawal_type": 'withdrawal_type',
        "extra_data": 'extra_data'
    }

    def __init__(self,
                 uuid=None,
                 amount=None,
                 status=None,
                 withdrawal_type=None,
                 extra_data=None):
        """Constructor for the InvestorWithdrawalList class"""

        # Initialize members of the class
        self.uuid = uuid
        self.amount = amount
        self.status = status
        self.withdrawal_type = withdrawal_type
        self.extra_data = extra_data

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        uuid = dictionary.get('uuid')
        amount = dictionary.get('amount')
        status = dictionary.get('status')
        withdrawal_type = dictionary.get('withdrawal_type')
        extra_data = dictionary.get('extra_data')

        # Return an object of this model
        return cls(uuid,
                   amount,
                   status,
                   withdrawal_type,
                   extra_data)
