# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class NationalityUpdate(object):

    """Implementation of the 'NationalityUpdate' model.

    A ModelSerializer that takes additional arguments for
    "fields", "omit" and "expand" in order to
    control which fields are displayed, and whether to replace simple
    values with complex, nested serializations

    Attributes:
        country (string): TODO: type description here.
        document_number (string): TODO: type description here.
        document_type (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country": 'country',
        "document_number": 'document_number',
        "document_type": 'document_type'
    }

    def __init__(self,
                 country=None,
                 document_number=None,
                 document_type=None):
        """Constructor for the NationalityUpdate class"""

        # Initialize members of the class
        self.country = country
        self.document_number = document_number
        self.document_type = document_type

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country = dictionary.get('country')
        document_number = dictionary.get('document_number')
        document_type = dictionary.get('document_type')

        # Return an object of this model
        return cls(country,
                   document_number,
                   document_type)
