# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ForecastDecumulationRequest(object):

    """Implementation of the 'ForecastDecumulationRequest' model.

    TODO: type model description here.

    Attributes:
        initial_amount (float): TODO: type description here.
        recurring_amount (float): TODO: type description here.
        risk_level (int): TODO: type description here.
        withdrawal_amount (float): TODO: type description here.
        retirement_age (int): TODO: type description here.
        life_expectancy (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "initial_amount": 'initial_amount',
        "recurring_amount": 'recurring_amount',
        "risk_level": 'risk_level',
        "withdrawal_amount": 'withdrawal_amount',
        "retirement_age": 'retirement_age',
        "life_expectancy": 'life_expectancy'
    }

    def __init__(self,
                 initial_amount=None,
                 recurring_amount=None,
                 risk_level=None,
                 withdrawal_amount=None,
                 retirement_age=None,
                 life_expectancy=None):
        """Constructor for the ForecastDecumulationRequest class"""

        # Initialize members of the class
        self.initial_amount = initial_amount
        self.recurring_amount = recurring_amount
        self.risk_level = risk_level
        self.withdrawal_amount = withdrawal_amount
        self.retirement_age = retirement_age
        self.life_expectancy = life_expectancy

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        initial_amount = dictionary.get('initial_amount')
        recurring_amount = dictionary.get('recurring_amount')
        risk_level = dictionary.get('risk_level')
        withdrawal_amount = dictionary.get('withdrawal_amount')
        retirement_age = dictionary.get('retirement_age')
        life_expectancy = dictionary.get('life_expectancy')

        # Return an object of this model
        return cls(initial_amount,
                   recurring_amount,
                   risk_level,
                   withdrawal_amount,
                   retirement_age,
                   life_expectancy)
