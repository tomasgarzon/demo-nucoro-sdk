# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from nucoroapiv2.models.category import Category


class PresetCategoryGroup(object):

    """Implementation of the 'PresetCategoryGroup' model.

    TODO: type model description here.

    Attributes:
        uuid (uuid|string): TODO: type description here.
        code (string): TODO: type description here.
        categories (list of Category): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uuid": 'uuid',
        "code": 'code',
        "categories": 'categories'
    }

    def __init__(self,
                 uuid=None,
                 code=None,
                 categories=None):
        """Constructor for the PresetCategoryGroup class"""

        # Initialize members of the class
        self.uuid = uuid
        self.code = code
        self.categories = categories

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        uuid = dictionary.get('uuid')
        code = dictionary.get('code')
        categories = None
        if dictionary.get('categories') is not None:
            categories = [Category.from_dictionary(x) for x in dictionary.get('categories')]

        # Return an object of this model
        return cls(uuid,
                   code,
                   categories)
