# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ImpersonationToken(object):

    """Implementation of the 'ImpersonationToken' model.

    TODO: type model description here.

    Attributes:
        impersonator (string): TODO: type description here.
        impersonated (string): TODO: type description here.
        token (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "impersonator": 'impersonator',
        "impersonated": 'impersonated',
        "token": 'token'
    }

    def __init__(self,
                 impersonator=None,
                 impersonated=None,
                 token=None):
        """Constructor for the ImpersonationToken class"""

        # Initialize members of the class
        self.impersonator = impersonator
        self.impersonated = impersonated
        self.token = token

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        impersonator = dictionary.get('impersonator')
        impersonated = dictionary.get('impersonated')
        token = dictionary.get('token')

        # Return an object of this model
        return cls(impersonator,
                   impersonated,
                   token)
