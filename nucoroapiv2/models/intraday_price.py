# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from nucoroapiv2.api_helper import APIHelper


class IntradayPrice(object):

    """Implementation of the 'IntradayPrice' model.

    TODO: type model description here.

    Attributes:
        amount (float): TODO: type description here.
        datetime (datetime): TODO: type description here.
        open_price (float): TODO: type description here.
        high_price (float): TODO: type description here.
        low_price (float): TODO: type description here.
        previous_close_price (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "datetime": 'datetime',
        "open_price": 'open_price',
        "high_price": 'high_price',
        "low_price": 'low_price',
        "previous_close_price": 'previous_close_price'
    }

    def __init__(self,
                 amount=None,
                 datetime=None,
                 open_price=None,
                 high_price=None,
                 low_price=None,
                 previous_close_price=None):
        """Constructor for the IntradayPrice class"""

        # Initialize members of the class
        self.amount = amount
        self.datetime = APIHelper.RFC3339DateTime(datetime) if datetime else None
        self.open_price = open_price
        self.high_price = high_price
        self.low_price = low_price
        self.previous_close_price = previous_close_price

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        amount = dictionary.get('amount')
        datetime = APIHelper.RFC3339DateTime.from_value(dictionary.get("datetime")).datetime if dictionary.get("datetime") else None
        open_price = dictionary.get('open_price')
        high_price = dictionary.get('high_price')
        low_price = dictionary.get('low_price')
        previous_close_price = dictionary.get('previous_close_price')

        # Return an object of this model
        return cls(amount,
                   datetime,
                   open_price,
                   high_price,
                   low_price,
                   previous_close_price)
