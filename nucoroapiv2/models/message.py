# -*- coding: utf-8 -*-

"""
nucoroapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from nucoroapiv2.api_helper import APIHelper
from nucoroapiv2.models.attachment import Attachment


class Message(object):

    """Implementation of the 'Message' model.

    TODO: type model description here.

    Attributes:
        user (string): TODO: type description here.
        read_date (datetime): TODO: type description here.
        content (string): TODO: type description here.
        created (datetime): TODO: type description here.
        attachments (list of Attachment): TODO: type description here.
        uuid (uuid|string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user": 'user',
        "read_date": 'read_date',
        "created": 'created',
        "attachments": 'attachments',
        "uuid": 'uuid',
        "content": 'content'
    }

    def __init__(self,
                 user=None,
                 read_date=None,
                 created=None,
                 attachments=None,
                 uuid=None,
                 content=None):
        """Constructor for the Message class"""

        # Initialize members of the class
        self.user = user
        self.read_date = APIHelper.RFC3339DateTime(read_date) if read_date else None
        self.content = content
        self.created = APIHelper.RFC3339DateTime(created) if created else None
        self.attachments = attachments
        self.uuid = uuid

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        user = dictionary.get('user')
        read_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("read_date")).datetime if dictionary.get("read_date") else None
        created = APIHelper.RFC3339DateTime.from_value(dictionary.get("created")).datetime if dictionary.get("created") else None
        attachments = None
        if dictionary.get('attachments') is not None:
            attachments = [Attachment.from_dictionary(x) for x in dictionary.get('attachments')]
        uuid = dictionary.get('uuid')
        content = dictionary.get('content')

        # Return an object of this model
        return cls(user,
                   read_date,
                   created,
                   attachments,
                   uuid,
                   content)
